syntax = "proto3";

package fyreplace.protos;
option csharp_namespace = "Fyreplace.Protos";
option java_generate_equals_and_hash = true;
option java_multiple_files = true;
option java_package = "app.fyreplace.protos";
option objc_class_prefix = "FP";
option swift_prefix = "FP";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "protos/id.proto";
import "protos/image.proto";
import "protos/pagination.proto";
import "protos/user.proto";


message ChapterLocation {
    bytes post_id = 1;
    uint32 position = 2;
}

message ChapterRelocation {
    bytes post_id = 1;
    uint32 from_position = 2;
    uint32 to_position = 3;
}

message Chapter {
    string text = 1;
    bool is_title = 2;
    Image image = 3;
}

message ChapterTextUpdate {
    ChapterLocation location = 1;
    string text = 2;
    bool is_title = 3;
}

message ChapterImageUpdate {
    oneof update {
        ChapterLocation location = 10;
        ImageChunk chunk = 11;
    }
}

message Post {
    bytes id = 1;
    Profile author = 2;
    bool is_anonymous = 3;
    bool is_subscribed = 4;
    google.protobuf.Timestamp date_created = 5;
    bool is_preview = 6;
    repeated Chapter chapters = 7;
    uint32 chapter_count = 8;
    uint32 comments_read = 9;
}

message Posts {
    repeated Post posts = 1;
    Cursor previous = 2;
    Cursor next = 3;
}

message Publication {
    bytes id = 1;
    bool anonymous = 2;
}

message Subscription {
    bytes id = 1;
    bool subscribed = 2;
}

message Vote {
    bytes post_id = 1;
    bool spread = 2;
}

service PostService {
    rpc ListFeed (stream Vote) returns (stream Post);
    rpc ListArchive (stream Page) returns (stream Posts);
    rpc ListOwnPosts (stream Page) returns (stream Posts);
    rpc ListDrafts (stream Page) returns (stream Posts);

    rpc Retrieve (Id) returns (Post);
    rpc Create (google.protobuf.Empty) returns (Id);
    rpc Publish (Publication) returns (google.protobuf.Empty);
    rpc Delete (Id) returns (google.protobuf.Empty);
    rpc UpdateSubscription (Subscription) returns (google.protobuf.Empty);
    rpc Report (Id) returns (google.protobuf.Empty);
    rpc Absolve (Id) returns (google.protobuf.Empty);
}

service ChapterService {
    rpc Create (ChapterLocation) returns (google.protobuf.Empty);
    rpc Move (ChapterRelocation) returns (google.protobuf.Empty);
    rpc UpdateText (ChapterTextUpdate) returns (google.protobuf.Empty);
    rpc UpdateImage (stream ChapterImageUpdate) returns (Image);
    rpc Delete (ChapterLocation) returns (google.protobuf.Empty);
}
